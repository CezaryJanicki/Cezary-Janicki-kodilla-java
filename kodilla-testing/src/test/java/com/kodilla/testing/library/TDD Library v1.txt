
    @Test
    public void libraryUserWithZeroBooks() {
        //Given
        LibraryDatabase libraryDatabaseMock = mock(LibraryDatabase.class);
        BookLibrary bookLibrary = new BookLibrary(libraryDatabaseMock);
        List<Book> resultListOfZeroBooks = generateListOfNBooks(0);
        LibraryUser libraryUser = new LibraryUser("Cezary", "Janicki", "8008221540");
        when(libraryDatabaseMock.listBooksInHandsOf(libraryUser)).thenReturn(resultListOfZeroBooks);

        //When
        List<Book> usersBooks = bookLibrary.listBooksInHandsOf(libraryUser);

        //Then
        assertEquals(0, usersBooks.size());
    }

    @Test
    public void libraryUserWithOneBook() {
        //Given
        LibraryDatabase libraryDatabaseMock = mock(LibraryDatabase.class);
        BookLibrary bookLibrary = new BookLibrary(libraryDatabaseMock);
        List<Book> resultListOfOneBook = generateListOfNBooks(1);
        LibraryUser libraryUser = new LibraryUser("Cezary", "Janicki", "8008221540");
        when(libraryDatabaseMock.listBooksInHandsOf(libraryUser)).thenReturn(resultListOfOneBook);

        //When
        List<Book> usersBooks = bookLibrary.listBooksInHandsOf(libraryUser);

        //Then
        assertEquals(1, usersBooks.size());
    }

    @Test
    public void libraryUserWithFiveBook() {
        //Given
        LibraryDatabase libraryDatabaseMock = mock(LibraryDatabase.class);
        BookLibrary bookLibrary = new BookLibrary(libraryDatabaseMock);
        List<Book> resultListOfOneBook = generateListOfNBooks(5);
        LibraryUser libraryUser = new LibraryUser("Cezary", "Janicki", "8008221540");
        when(libraryDatabaseMock.listBooksInHandsOf(libraryUser)).thenReturn(resultListOfOneBook);

        //When
        List<Book> usersBooks = bookLibrary.listBooksInHandsOf(libraryUser);

        //Then
        assertEquals(5, usersBooks.size());
    }

    @Test
    public void testGetSpecificData() {
        //Given
        LibraryDatabase libraryDatabaseMock = mock(LibraryDatabase.class);
        BookLibrary bookLibrary = new BookLibrary(libraryDatabaseMock);
        List<Book> resultListOfFiveBooks = generateListOfNBooks(5);
        LibraryUser libraryUser = new LibraryUser("Cezary", "Janicki", "8008221540");
        Book resultListOfBookNo0 = resultListOfFiveBooks.get(0);
        Book resultListOfBookNo5 = resultListOfFiveBooks.get(resultListOfFiveBooks.size()-1);
        when(libraryDatabaseMock.listBooksInHandsOf(libraryUser)).thenReturn(resultListOfFiveBooks);

        //When
        List<Book> usersBooks = bookLibrary.listBooksInHandsOf(libraryUser);

        //Then
        assertEquals(resultListOfBookNo0, usersBooks.get(0));
        assertEquals(resultListOfBookNo5, usersBooks.get(usersBooks.size()-1));
    }
}
